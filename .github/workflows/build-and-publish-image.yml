name: Build and Publish Image

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout sources
      uses: actions/checkout@v3

    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up GraalVM 17
      uses: graalvm/setup-graalvm@v1
      with:
        version: 'latest'
        java-version: '17'
        components: 'native-image'
        github-token: ${{ github.token }}

    - name: Build and Test with Maven
      run: mvn --batch-mode -Dmaven.test.failure.ignore=true test
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Report Maven Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Maven Test Results
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: true

    - name: Build and Publish Image
      run: mvn -Pnative --batch-mode -DskipTests package
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@v3

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  autodeploy:
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    steps:
    - name: Install flyctl
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Deploy to fly.io
      run: flyctl deploy